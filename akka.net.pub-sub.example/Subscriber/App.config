<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="akka" type="Akka.Configuration.Hocon.AkkaConfigurationSection, Akka" />
  </configSections>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
  </startup>
  <akka>
    <hocon>
      <![CDATA[
akka {
    actor {              
        provider = "Akka.Cluster.ClusterActorRefProvider, Akka.Cluster"
        deployment {
            /subscriber {
                router = smallest-mailbox-pool
                nr-of-instances = 1
            }
        }                          
        debug {  
            receive = on
            autoreceive = on
            lifecycle = on
            event-stream = on
            unhandled = on
        }
        serializers {
            json = "Akka.Serialization.NewtonSoftJsonSerializer"
            bytes = "Akka.Serialization.ByteArraySerializer"
            hyperion = "Akka.Serialization.HyperionSerializer, Akka.Serialization.Hyperion"
        }
        serialization-bindings {
            "System.Byte[]" = bytes
            "System.Object" = hyperion
        }
    }
    cluster {
        #will inject this node as a self-seed node at run-time
        seed-nodes = ["akka.tcp://pubsubtest@127.0.0.1:33400"]
        roles = ["subscriber"]
    }
    remote {
        log-remote-lifecycle-events = on
        log-received-messages = on

        helios.tcp {
            transport-class = "Akka.Remote.Transport.Helios.HeliosTcpTransport, Akka.Remote"
            applied-adapters = []
            transport-protocol = tcp
            #will be populated with a dynamic host-name at runtime if left uncommented
            #public-hostname = "POPULATE STATIC IP HERE"
            hostname = "127.0.0.1"
            port = 33401
        }
    }  
    loggers = []
    stdout-loglevel = DEBUG
    loglevel = DEBUG
    log-config-on-start = on
  }
}
        ]]>
    </hocon>
  </akka>
</configuration>